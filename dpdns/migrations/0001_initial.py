# -*- coding: utf-8 -*-
# Generated by Django 1.11.18 on 2019-06-22 00:11
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('key', models.CharField(max_length=40, unique=True)),
            ],
            options={
                'verbose_name_plural': 'API Keys',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_id', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=10)),
                ('modified_at', models.IntegerField()),
                ('account', models.CharField(max_length=40)),
                ('comment', models.CharField(max_length=64000)),
            ],
            options={
                'db_table': 'comments',
            },
        ),
        migrations.CreateModel(
            name='Cryptokeys',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_id', models.IntegerField()),
                ('flags', models.IntegerField()),
                ('active', models.IntegerField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cryptokeys',
            },
        ),
        migrations.CreateModel(
            name='DomainAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.SmallIntegerField(choices=[(0, 'User'), (10, 'Owner')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Domainmetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_id', models.IntegerField()),
                ('kind', models.CharField(blank=True, max_length=32, null=True)),
                ('content', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'domainmetadata',
            },
        ),
        migrations.CreateModel(
            name='Domains',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('master', models.CharField(blank=True, max_length=128, null=True)),
                ('last_check', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(max_length=6)),
                ('notified_serial', models.IntegerField(blank=True, null=True)),
                ('account', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'db_table': 'domains',
            },
        ),
        migrations.CreateModel(
            name='Options',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('value', models.CharField(blank=True, max_length=2000, null=True)),
            ],
            options={
                'db_table': 'options',
            },
        ),
        migrations.CreateModel(
            name='Records',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, choices=[('A', 'A'), ('AAAA', 'AAAA'), ('CNAME', 'CNAME'), ('SRV', 'SRV'), ('SOA', 'SOA'), ('NS', 'NS'), ('MX', 'MX'), ('PTR', 'PTR'), ('TXT', 'TXT'), ('SPF', 'SPF'), ('CERT', 'CERT'), ('DNSKEY', 'DNSKEY'), ('DS', 'DS'), ('KEY', 'KEY'), ('NSEC', 'NSEC'), ('RRSIG', 'RRSIG'), ('HINFO', 'HINFO'), ('LOC', 'LOC'), ('NAPTR', 'NAPTR'), ('RP', 'RP'), ('AFSDB', 'AFSDB'), ('SSHFP', 'SSHFP')], max_length=10, null=True)),
                ('content', models.CharField(blank=True, max_length=64000, null=True)),
                ('ttl', models.IntegerField(blank=True, null=True)),
                ('prio', models.IntegerField(blank=True, null=True)),
                ('disabled', models.BooleanField(default=False)),
                ('ordername', models.CharField(blank=True, max_length=255, null=True)),
                ('auth', models.BooleanField(default=True)),
                ('domain', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='dpdns.Domains')),
            ],
            options={
                'db_table': 'records',
            },
        ),
        migrations.CreateModel(
            name='Remote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record', models.IntegerField()),
                ('description', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=20)),
                ('security', models.CharField(max_length=2000)),
                ('nonce', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'remote',
            },
        ),
        migrations.CreateModel(
            name='Supermasters',
            fields=[
                ('ip', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('nameserver', models.CharField(max_length=255)),
                ('account', models.CharField(max_length=40)),
            ],
            options={
                'db_table': 'supermasters',
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(db_index=True, max_length=40, unique=True)),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_tokens', to='dpdns.Domains')),
            ],
        ),
        migrations.CreateModel(
            name='Tsigkeys',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('algorithm', models.CharField(blank=True, max_length=50, null=True)),
                ('secret', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'tsigkeys',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=200)),
                ('type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.AlterUniqueTogether(
            name='tsigkeys',
            unique_together=set([('name', 'algorithm')]),
        ),
        migrations.AlterUniqueTogether(
            name='supermasters',
            unique_together=set([('ip', 'nameserver')]),
        ),
        migrations.AddField(
            model_name='domainaccess',
            name='domain',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domain_accesses', to='dpdns.Domains'),
        ),
        migrations.AddField(
            model_name='domainaccess',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dpdns.Users'),
        ),
        migrations.AddField(
            model_name='apikey',
            name='domain',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to='dpdns.Domains'),
        ),
        migrations.AlterUniqueTogether(
            name='domainaccess',
            unique_together=set([('domain', 'user')]),
        ),
    ]
